---
grails:
    gorm:
      autoflush: true
    profile: angular
    codegen:
        defaultPackage: com.insilico.dmc
    spring:
        transactionManagement:
            proxies: false
    neo4j:
        url: bolt://localhost:7687
        username: neo4j
        password: LAT8gjThKJ26TR
environments:
    development:
      neo4j:
          url: bolt://localhost:7687
          username: neo4j
          password: LAT8gjThKJ26TR
    production:
      neo4j:
          url: bolt://localhost:7687
          username: neo4j
          password: LAT8gjThKJ26TR
    test:
      neo4j:
          type: embedded

#    gorm:
#        # Whether to autowire entities.
#        # Disabled by default for performance reasons.
##        autowire: false
#        reactor:
#            # Whether to translate GORM events into Reactor events
#            # Disabled by default for performance reasons
#            events: false
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    main:
        banner-mode: "off"
    groovy:
        template:
            check-template-location: false
    http:
      multipart:
        max-file-size: 500MB
        max-request-size: 500MB

# Spring Actuator Endpoints are Disabled by Default
endpoints:
    enabled: false
    jmx:
        enabled: true

---
grails:
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            json:
              - application/json
              - text/json
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            js: text/javascript
            rss: application/rss+xml
            text: text/plain
            all: '*/*'
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
        upload:
            maxFileSize: 52428800
            maxRequestSize: 52428800
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlets: html
                taglib: none
                staticparts: none
---
grails:
    cors:
        enabled: true
#---
#endpoints:
#    jmx:
#        unique-names: true
#
#---
hibernate:
    cache:
        queries: false
        use_second_level_cache: true
        use_query_cache: false
        region.factory_class: org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory

# NOTE: Comment out if neo4j activated
#dataSource:
#    pooled: true
#    jmxExport: true
##    driverClassName: org.h2.Driver
##    username: sa
#    driverClassName: org.postgresql.Driver
#    dialect: org.hibernate.dialect.PostgresPlusDialect
#    username: ubuntu
#    password:

#environments:
#    development:
#       grails:
#          neo4j:
#             url: bolt://localhost:7687
#             username: neo4j
#             password: demo
#    test:
#        grails:
#          neo4j:
#              type: embedded
#              embedded:
#                 ephemeral: true
#              options:
#                 encryptionLevel: NONE
#    production:
#        grails:
#          neo4j:
#             url: bolt://localhost:7687
#             username: neo4j
#             password: demo

#    production:
#        dataSource:
#            dbCreate: none
##            url: jdbc:h2:./prodDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
#            url: jdbc:postgresql://localhost/dmc-prod
#            properties:
#                jmxEnabled: true
#                initialSize: 5
#                maxActive: 50
#                minIdle: 5
#                maxIdle: 25
#                maxWait: 10000
#                maxAge: 600000
#                timeBetweenEvictionRunsMillis: 5000
#                minEvictableIdleTimeMillis: 60000
#                validationQuery: SELECT 1
#                validationQueryTimeout: 3
#                validationInterval: 15000
#                testOnBorrow: true
#                testWhileIdle: true
#                testOnReturn: false
#                jdbcInterceptors: ConnectionState
#                defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED
---
#grails:
#    plugin:
#        springsecurity:
#            oauth2:
#                active: false #whether the whole plugin is active or not
#                registration:
#                    askToLinkOrCreateAccountUri: '/oauth2/ask' # The URI that is called to aks the user to either create a new account or link to an existing account
#                    roleNames: ['ROLE_USER'] #A list of role names that should be automatically granted to an OAuth User. The roles will be created if they do not exist
#                providers:
#                    github:
#                        api_key: '87b62827b5670f39f19b'             #needed
#                        api_secret: '5d9d534a196a6b22f62fddeb196a3a92eccde112'      #needed
#                        successUri: "/oauth2/github/success"    #optional
#                        failureUri: "/oauth2/github/failure"    #optional
#                        callback: "/oauth2/github/callback"     #optional
